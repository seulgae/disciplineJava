package DisciplineJava_02.ex_01;

public class ex_01 {
    public static void main(String[] args) {
        // 1) 내부 클래스에서 외부 클래스의 변수와 메소드에 접근하여 사용해보세요.
        // 인스턴스 내부 클래스는 외부 클래스의 인스턴스가 꼭 생성되어 있어야한다.
        // 메모리 구조상 인스턴스 내부 클래스의 객체는 외부 클래스의 인스턴스를 참조하는 포인터를 갖고 있는데, 이 포인터를 통해 외부 클래스의 변수 등에 접근이 가능한 것이다.
        OuterClass o = new OuterClass(); // 외부 클래스 생성

        // 인스턴스 내부 클래스의 객체는 외부 클래스의 객체가 소멸될 때 같이 소멸된다.
        // 외부 클래스의 인스턴스가 생성되었다고, 내부 클래스의 인스턴스가 꼭 같이 생성되는 건 아니지만
        // 외부 클래스의 인스턴스가 소멸된다면, 내부 클래스의 인스턴스 역시 솔명된다.
        // 메모리 사용 측면에서 효율적이다.
        OuterClass.InnerClass i  = o.new InnerClass(); // 외부 클래스의 인스턴스가 생성되어야 내부 클래스의 인스턴스 생성가능.
    }
}




